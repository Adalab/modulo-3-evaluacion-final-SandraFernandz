{"version":3,"sources":["services/charactersApi.js","components/CharactersCard.js","components/CharactersList.js","components/FilterBySpecies.js","components/Filters.js","components/CharacterDetail.js","images/Rick_and_Morty.png","components/Header.js","components/App.js","index.js"],"names":["getCharactersFromApi","fetch","then","response","json","results","map","character","id","name","species","image","episodes","episode","length","status","planet","origin","CharactersCard","props","console","log","to","charactersData","className","src","alt","CharactersList","html","data","FilterBySpecies","htmlFor","value","searchSpecies","onChange","handleSearchSpecies","Filters","action","type","searchName","handleChangeSearchName","CharacterDetail","undefined","Header","logo","App","useState","setData","setSearchName","setSearchSpecies","useEffect","initialData","routeData","useRouteMatch","characterId","params","selectedCharacter","find","parseInt","filteredData","filter","toLocaleLowerCase","includes","toLowerCase","path","exact","ev","currentTarget","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72f222c9.chunk.js","sourcesContent":["function getCharactersFromApi() {\n  return fetch('https://rickandmortyapi.com/api/character')\n    .then((response) => response.json())\n    .then((json) => {\n      //limpiamos los datos\n\n      return json.results.map((character) => {\n        return {\n          id: character.id,\n          name: character.name,\n          species: character.species,\n          image: character.image,\n          episodes: character.episode.length,\n          status: character.status,\n          planet: character.origin.name,\n        };\n      });\n    });\n}\n\nexport default getCharactersFromApi;\n","import { Link } from 'react-router-dom';\nimport '../styles/charactersCard.scss';\n\nfunction CharactersCard(props) {\n  console.log('CharactersCard', props);\n  return (\n    <Link to={`./character/${props.charactersData.id}`} className=\"card\">\n      <img\n        className=\"card_picture\"\n        src={props.charactersData.image}\n        alt={`Esta es la foto de ${props.charactersData.name}`}\n      />\n      <div className=\"card_description\">\n        <h4 className=\"card_description_title\">{props.charactersData.name}</h4>\n        <p className=\"card_description_text\">{props.charactersData.species}</p>\n      </div>\n    </Link>\n  );\n}\nexport default CharactersCard;\n","import CharactersCard from './CharactersCard';\nimport '../styles/charactersList.scss';\n\nfunction CharactersList(props) {\n  console.log('CharactersList', props);\n  // hago map del array\n  const html = props.data.map((charactersData) => {\n    return (\n      <li key={charactersData.id}>\n        <CharactersCard charactersData={charactersData} />\n      </li>\n    );\n  });\n  if (props.data.length === 0) {\n    return <p className=\"unknown\">Lo sentimos, ese personaje no existe.</p>;\n  } else {\n    return <ul className=\"list\">{html}</ul>;\n  }\n}\n\nexport default CharactersList;\n","import '../styles/filterBySpecies.scss';\n\nfunction FilterBySpecies(props) {\n  return (\n    <>\n      <label htmlFor=\"species\">Selecciona por especie</label>\n      <select\n        className=\"form_input\"\n        name=\"species\"\n        id=\"species\"\n        value={props.searchSpecies}\n        onChange={props.handleSearchSpecies}\n      >\n        <option value=\"all\">Todas</option>\n        <option value=\"human\">Humano</option>\n        <option value=\"alien\">Alien</option>\n      </select>\n    </>\n  );\n}\n\nexport default FilterBySpecies;\n","import '../styles/filters.scss';\nimport FilterBySpecies from './FilterBySpecies';\n\nfunction Filters(props) {\n  return (\n    <form action=\"\" className=\"form\">\n      <label htmlFor=\"name\">Encuentra un personaje</label>\n      <input\n        className=\"form_input\"\n        type=\"text\"\n        id=\"name\"\n        value={props.searchName}\n        onChange={props.handleChangeSearchName}\n      />\n      <FilterBySpecies\n        searchSpecies={props.searchSpecies}\n        handleSearchSpecies={props.handleSearchSpecies}\n      />\n    </form>\n  );\n}\n\nexport default Filters;\n","import '../styles/characterDetail.scss';\n\nfunction CharacterDetail(props) {\n  if (props.character === undefined) {\n    return (\n      <section className=\"notFound\">\n        <p>Ese personaje no existe</p>\n      </section>\n    );\n  } else {\n    return (\n      <section className=\"detail\">\n        <img\n          src={props.character.image}\n          alt={`Esta es la foto de ${props.character.name}`}\n        />\n        <ul className=\"detail_list\">\n          <li>Nombre: {props.character.name}</li>\n          <li>Especie: {props.character.species}</li>\n          <li>Estado: {props.character.status}</li>\n          <li>Planeta: {props.character.planet}</li>\n          <li>NÃºmero de episodios: {props.character.episodes}</li>\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default CharacterDetail;\n","export default __webpack_public_path__ + \"static/media/Rick_and_Morty.de13d484.png\";","import logo from '../images/Rick_and_Morty.png';\nimport '../styles/header.scss';\n\nfunction Header() {\n  return <img className=\"title\" src={logo} alt=\"logo\" />;\n}\n\nexport default Header;\n","import { useState, useEffect } from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router';\nimport getCharactersFromApi from '../services/charactersApi';\nimport CharactersList from './CharactersList';\nimport Filters from './Filters';\nimport CharacterDetail from './CharacterDetail';\nimport Header from './Header';\n\nimport '../styles/app.scss';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [searchName, setSearchName] = useState('');\n  const [searchSpecies, setSearchSpecies] = useState('all');\n\n  useEffect(() => {\n    getCharactersFromApi().then((initialData) => {\n      console.log(initialData);\n      setData(initialData);\n    });\n  }, []);\n\n  const handleChangeSearchName = (ev) => {\n    setSearchName(ev.currentTarget.value);\n  };\n  const handleSearchSpecies = (ev) => {\n    setSearchSpecies(ev.currentTarget.value);\n  };\n\n  const routeData = useRouteMatch('/character/:id');\n  console.log(routeData);\n\n  const characterId = routeData !== null ? routeData.params.id : '';\n\n  const selectedCharacter = data.find(\n    (character) => character.id === parseInt(characterId)\n  );\n\n  console.log(selectedCharacter);\n\n  const filteredData = data\n    .filter((character) =>\n      character.name\n        .toLocaleLowerCase()\n        .includes(searchName.toLocaleLowerCase())\n    )\n    .filter(\n      (character) =>\n        searchSpecies === 'all' ||\n        character.species.toLowerCase() === searchSpecies\n    );\n  return (\n    <>\n      <Header />\n\n      <div className=\"all\">\n        <Switch>\n          <Route path=\"/character/:id\">\n            <section>\n              <CharacterDetail character={selectedCharacter} />\n            </section>\n          </Route>\n\n          <Route exact path=\"/\">\n            <section>\n              <Filters\n                searchName={searchName}\n                handleChangeSearchName={handleChangeSearchName}\n                searchSpecies={searchSpecies}\n                handleSearchSpecies={handleSearchSpecies}\n              />\n            </section>\n            <section>\n              <CharactersList data={filteredData} />\n            </section>\n          </Route>\n          <Route>\n            <section>\n              <p>Â¡Oh! Algo ha salido mal. Vuelve a intentarlo.</p>\n            </section>\n          </Route>\n        </Switch>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}